server.port=7080

#logging.level.org.springframework=DEBUG

#如果不设置，url加上token都无法访问
security.oauth2.resource.filter-order=3

#redis 配置
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
#spring.redis.host=192.168.1.86
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=

#DataSource
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://192.168.1.119:3306/auth2?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=123456

#初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=201

#两个数据要小于熔断超时值timeoutInMilliseconds
ribbon.ReadTimeout=9000
ribbon.ConnectTimeout=9000

feign.hystrix.enabled=true
#配置是让Hystrix的超时时间改为10秒,Feign和Ribbon在整合了Hystrix后，可能会出现首次调用失败的问题
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=10000
#配置修改线程池中的coreSize
hystrix.threadpool.default.coreSize=5000
#hystrix.command.default.execution.isolation.strategy=SEMAPHORE
