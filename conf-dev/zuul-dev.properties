#server.port=7100

logging.file=/logs/${spring.application.name}_${server.port}/log.log

spring.application.name=zuul
#全局设置无敏感请求头
#zuul.sensitiveHeaders=Cookie,Set-Cookie,Authorization
# zuul默认的zuul.sensitive-headers配置
#将过滤请求header的Cookie、Set-Cookie、Authorization三个属性，
#导致cookie无法传播。 # 敏感头信息设置为空 
zuul.sensitiveHeaders="*"

zuul.routes.auth.path=/auth/**
zuul.routes.auth.sensitiveHeaders="*"
zuul.routes.auth.serviceId=authServer

zuul.routes.w0.path=/a/**
zuul.routes.w0.serviceId=service-clientA

zuul.routes.w.path=/b/**
zuul.routes.w.serviceId=service-clientB

eureka.client.serviceUrl.defaultZone=http://${security.user.name}:${security.user.password}@192.168.1.119:8000/eureka/

security.user.name=user
security.user.password=f62880e1-bc36

spring.sleuth.sampler.percentage=1
spring.zipkin.base-url=http://192.168.1.185:9411/

# 启用shutdown
endpoints.shutdown.enabled=true
# 密码验证
endpoints.shutdown.sensitive=false
#指定shutdown endpoint的路径
endpoints.shutdown.path=/s/shutdown

#zuul超时设置
#默认1000
zuul.host.socket-timeout-millis=2000
#默认2000
zuul.host.connect-timeout-millis=4000

#熔断器启用
feign.hystrix.enabled=true
hystrix.command.default.execution.timeout.enabled=true
#断路器的超时时间,下级服务返回超出熔断器时间，即便成功，消费端消息也是TIMEOUT,所以一般断路器的超时时间需要大于ribbon的超时时间。
#服务的返回时间大于ribbon的超时时间，会触发重试
##默认=1000，太小
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=10000

#ribbon请求连接的超时时间- 限制3秒内必须请求到服务，并不限制服务处理的返回时间
ribbon.ConnectTimeout=3000
#请求处理的超时时间 下级服务响应最大时间,超出时间消费方（路由也是消费方）返回timeout
ribbon.ReadTimeout=9000

#重试机制
#该参数用来开启重试机制，默认是关闭
spring.cloud.loadbalancer.retry.enabled=true
#对所有操作请求都进行重试
ribbon.OkToRetryOnAllOperations=true
#对当前实例的重试次数
ribbon.MaxAutoRetries=1
#切换实例的重试次数
ribbon.MaxAutoRetriesNextServer=1

#auth2
security.oauth2.client.access-token-uri=http://localhost:${server.port}/auth/oauth/token
security.oauth2.client.user-authorization-uri=http://localhost:${server.port}/auth/oauth/authorize
#security.oauth2.client.client-id=client1
#security.oauth2.client.client-secret=secret1

security.oauth2.resource.user-info-uri=http://localhost:${server.port}/auth/userinfo
security.oauth2.resource.prefer-token-info=false
